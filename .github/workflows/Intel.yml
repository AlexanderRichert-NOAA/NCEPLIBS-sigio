# This is a CI workflow for the NCEPLIBS-sigio project.
#
# This workflow builds with the Intel Classic and OneAPI compilers.
#
# Alex Richert, Sep 2023
name: Intel
on:
  push:
    branches:
    - develop
  pull_request:
    branches:
    - develop

# Use -l to use .bash_profile to load intel setvars.sh
defaults:
  run:
    shell: bash -leo pipefail {0}

jobs:
  Intel:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compilers: ["CC=icc FC=ifort", "CC=icx FC=ifx"]

    steps:

    # See https://software.intel.com/content/www/us/en/develop/articles/oneapi-repo-instructions.html
    - name: install-intel
      run: |
        cd /tmp
        wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
        sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
        rm GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
        echo "deb https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
        sudo apt-get update
        sudo apt-get install intel-oneapi-dev-utilities intel-oneapi-mpi-devel intel-oneapi-openmp intel-oneapi-compiler-fortran intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic
        echo "source /opt/intel/oneapi/setvars.sh" >> ~/.bash_profile

    - name: checkout-pfunit
      uses: actions/checkout@v2
      with:
        repository: Goddard-Fortran-Ecosystem/pFUnit
        path: pfunit
        submodules: true

    - name: build-pfunit
      if: steps.cache-pfunit.outputs.cache-hit != 'true'
      run: |
        cd pfunit
        mkdir build
        cd build
        ${{ matrix.compilers }} cmake .. -DSKIP_MPI=YES -DSKIP_ESMF=YES -DSKIP_FHAMCREST=YES -DCMAKE_INSTALL_PREFIX=~/pfunit
        # Avoid memory sanitizer problem with recent IntelLLVM versions:
        for f in $(find -type f); do sed -i 's:-check all::' $f ; done
        make -j2
        make install

    - name: checkout
      uses: actions/checkout@v2
      with: 
        path: sigio

    - name: build
      run: |
        cd sigio
        mkdir build && cd build
        ${{ matrix.compilers }} cmake .. -DENABLE_TESTS=ON -DCMAKE_PREFIX_PATH="~/pfunit"
        make -j2 VERBOSE=1

    - name: test-sigio
      run: |
        cd sigio/build
        ctest --verbose --output-on-failure --rerun-failed
